{
  "name": "Exception Resolver",
  "helpText": "Exception Resolvers determine what action to take when an error occurs e.g. retry, exclude and continue, halt the flow.",
  "webHelpURL": "https://github.com/ikasanEIP/ikasan/blob/3.1.x/ikasaneip/component/hospital/Readme.md",
  "componentType" : "org.ikasan.exceptionResolver.ExceptionResolver",
  "implementingClass" : "org.ikasan.exceptionResolver.MatchingExceptionResolver",
  "ikasanComponentFactoryMethod" : "eventGeneratingConsumer",
  "ikasanComponentBuilderClass" : "org.ikasan.builder.ExceptionResolverBuilderImpl",
  "ikasanComponentBuilderInterface" : "org.ikasan.builder.ExceptionResolverBuilder",
  "usesBuilder" : true,
  "flowBuilderMethod": "withExceptionResolver",
  "displayOrder": 10,
  "properties": {
    "componentName": {
      "propertyName": "componentName",
      "mandatory": true,
      "helpText": "The name of the component as displayed on diagrams, spaces are encouraged, succinct is best. The name should be unique for the flow."
    },
    "description": {
      "propertyName": "description",
      "helpText": "A more detailed description of the component that may assist in support.."
    }},
  "exceptionsCaught" : [
    "org.ikasan.spec.component.transformation.TransformationException.class",
    "org.ikasan.spec.component.splitting.SplitterException.class",
    "org.ikasan.spec.component.routing.RouterException.class",
    "org.ikasan.spec.component.endpoint.EndpointException.class",
    "javax.jms.JMSException.class",
    "javax.resource.ResourceException.class",
    "org.ikasan.spec.component.filter.FilterException.class"
  ],
  "actionList" : [
    {
      "actionName" : "ignoreException",
      "actionProperties":{}
    },{
      "actionName" : "excludeEvent",
      "actionProperties":{}
    },{
      "actionName" : "retry",
      "actionProperties":{
        "delay": "Integer",
        "interval": "Integer"
      }
    },{
      "actionName" : "retryIndefinatel",
      "actionProperties":{
        "delay": "Integer"
      }
    },{
      "actionName" : "scheduledCronEntry",
      "actionProperties":{
        "cronExpression": "String",
        "maxRetries": "Integer"
      }
    }
  ]
}
