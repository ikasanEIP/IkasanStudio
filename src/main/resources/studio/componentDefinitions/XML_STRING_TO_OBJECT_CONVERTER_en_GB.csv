# propertyName|paramGroupNumber|paramNumber|isConfigMandatory|isUserImplementedClass|isSetterProperty|isUserDefineResource|propertyConfigFileLabel|propertyDataType|usageDataType|validation|validationMessage|defaultValue - dataType must be string or an object that support Object.value(String)|helpText
#
# Note: 1. First row must be the column  headings so that edit as table works in intellij
#       2. Every component is assumed to have name and description so they do not need to be included here
#
# propertyName - Name of the property, used on input screens and to generate variable names
# paramGroup - Aggregates parameters
# paramNumber - Within the group
# isConfigMandatory - Mandatory for the component to be deemed to be complete
# isUserImplementedClass - The user will define a beskpoke class that implements the interface, we will generate the spring property but leave implementation to client code.
# isSetterProperty - This property is for use in the component factory setter
# isUserDefineResource - The user will define the details of the resource within the ResourceFactory.
# propertyConfigFileLabel - Identifies the spring injected property name. If a property does not have a propertyConfigFileLabel it is assumed that the property will not be environment specific i.e. not spring injected
# propertyDataType - i.e. the data type used in the properties file, note that this is not always the same as the usage data type/valuedate e.g. a List will have a
# usageDataType - Defaults to the propertyDataType. This is the data type from the Ikasan perspective e.g. List will have a propertyDataType of String but usageDatatype of List<T>, cron expression may have the regexp pattern they need to conform to
# validation - Used by the property editor to validate the property
# validationMessage - To be displayed if the validation fails
# defaultValue - As displayed in the properties editor.
# helpText - As shown in the toolTip on the properties editor and error text.
#
# OBJECT_TO_XML_STRING_CONVERTER
#
# Mandatory Properties
Name|1|1|true|false|false|||java.lang.String|||||The name of the component as displayed on diagrams, space are encouraged, succinct is best. The name should be unique for the flow.
# Optional Properties
Description|1|1|false|false|false|||java.lang.String|||||A more detailed description of the component that may assist in support.
AutoConvertElementToValue|1|1|false|false|true|||java.lang.Boolean|||||Add auto conversion
Configuration|1|1|false|true|true|||java.lang.String|org.ikasan.component.endpoint.filesystem.messageprovider.FileConsumerConfiguration|[A-Z_$][a-zA-Z\d_$]*|Provide a java classname for the Configuration bean||Provide the classname that overrides and implements the default FileConsumerConfiguration interface. The class encapsulates all the properties here into a single bean, using it will reduce your ability to configure the component within this tool.
ConfiguredResourceId|1|1|false|false|true|||java.lang.String|||||By default, the configuration ID = modulename + flowname + componentName + componentType. There are times when you may wish to override this i.e. if you want multiple flows to share the same configration or you have changed a flow name but don't want to update properties that may have already been stored in the override properties database.
ClassToBeBound|1|1|false|false|true|||java.lang.String|java.Lang.Object||||Class of the object to be serialised
ClassesToBeBound|1|1|false|false|true|||java.lang.String|java.util.List<java.Lang.Object>||||Classes of the objects to be serialised
ContextPath|1|1|false|false|true|||java.lang.String|||||Path to th context in the XML
ContextPaths|1|1|false|false|true|||java.lang.String|List<java.Lang.Object>||||List of context paths
MarshallerProperties|1|1|false|false|true|||java.lang.String|java.util.Map<java.Lang.String, java.Lang.Object>||||Map of properties to pass to the marshaller
UnmarshallerProperties|1|1|false|false|true|||java.lang.String|java.util.Map<java.Lang.String, java.Lang.Object>||||Map of properties to pass to the unmarshaller
ValidationEventHandler|1|1|false|true|true|true||java.lang.String|javax.xml.bind.ValidationEventHandler||||A basic event handler interface for validation errors.