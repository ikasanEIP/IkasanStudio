# propertyName|paramGroupNumber|affectsBespokeClass|isConfigMandatory|isUserSuppliedClass|isSetterProperty|isUserDefineResource|propertyConfigFileLabel|propertyDataType|usageDataType|validation|validationMessage|defaultValue - dataType must be string or an object that support Object.value(String)|helpText
#
# Note: 1. First row must be the column  headings so that edit as table works in intellij
#       2. Every component is assumed to have name and description so they do not need to be included here
#
# propertyName - Name of the property, used on input screens and to generate variable names
# paramGroup - Aggregates parameters
# affectsBespokeClass - Causes the user part of the package structure to be regenerated so much be confirmed before being actioned
# isConfigMandatory - Mandatory for the component to be deemed to be complete
# isUserSuppliedClass - The user will define a beskpoke class that implements the interface, we will generate the spring property but leave implementation to client code.
# isSetterProperty - This property is for use in the component factory setter
# isUserDefineResource - The user will define the details of the resource within the ResourceFactory.
# propertyConfigFileLabel - Identifies the spring injected property name. If a property does not have a propertyConfigFileLabel it is assumed that the property will not be environment specific i.e. not spring injected
# propertyDataType - i.e. the data type used in the properties file, note that this is not always the same as the usage data type/valuedate e.g. a List will have a
# usageDataType - Defaults to the propertyDataType. This is the data type from the Ikasan perspective e.g. List will have a propertyDataType of String but usageDatatype of List<T>, cron expression may have the regexp pattern they need to conform to
# validation - Used by the property editor to validate the property
# validationMessage - To be displayed if the validation fails
# defaultValue - As displayed in the properties editor.
# helpText - As shown in the toolTip on the properties editor and error text.
#
# JMS_PRODUCER
#
# Mandatory Properties
Name|1|false|true|false|false|||java.lang.String|||||The name of the component as displayed on diagrams, space are encouraged, succinct is best. The name should be unique for the flow.
# Optional Properties
Description|1|false|false|false|false|||java.lang.String|||||A more detailed description of the component that may assist in support.
Configuration|1|false|false|true|true|||java.lang.String|org.ikasan.component.endpoint.filesystem.messageprovider.FileConsumerConfiguration|[A-Z_$][a-zA-Z\d_$]*|Provide a java classname for the Configuration bean||Provide the classname that overrides and implements the default FileConsumerConfiguration interface. The class encapsulates all the properties here into a single bean, using it will reduce your ability to configure the component within this tool.
ConfiguredResourceId|1|false|true|false|true|||java.lang.String||||p__moduleName-__componentName|By default, the configuration ID = modulename + flowname + componentName + componentType. There are times when you may wish to override this i.e. if you want multiple flows to share the same configration or you have changed a flow name but don't want to update properties that may have already been stored in the override properties database.
ConnectionFactory|1|false|false|true|true|true||java.lang.String|javax.jms.ConnectionFactory||||Provide the classname that overrides and implements the default ConnectionFactory interface. The class encapsulates all the properties here into a single bean, using it will reduce your ability to configure the component within this tool.
ConnectionFactoryJNDIProperties|1|false|false|false|true|||java.lang.String|java.util.Map<String, String>||||Optional JNDI parameters map. Typical map would include following keys : java.naming.provider.url, java.naming.factory.initial, java.naming.factory.url.pkgs, java.naming.security.credentials, java.naming.security.principle
ConnectionFactoryJndiPropertyFactoryInitial|1|false|true|false|true||jms.__module.__flow.__component.connection.factory.jndi.initial|java.lang.String||||org.apache.activemq.jndi.ActiveMQInitialContextFactory|The fully qualified class name of the factory class that will create the initial context. An initial context is the starting point for naming operations. For more information, see the Java API documentation for javax.naming.Context.INITIAL_CONTEXT_FACTORY.
ConnectionFactoryJndiPropertyProviderUrl|1|false|false|false|true||jms.__module.__flow.__component.connection.factory.jndi.provider.url|java.lang.String||||vm://embedded-broker?create=true&broker.persistent=false&broker.useJmx=false|The configuration information for the service provider to use. The value should contain a URL string. For more information, see the Java API documentation for javax.naming.Context.PROVIDER_URL.
ConnectionFactoryJndiPropertySecurityCredentials|1|false|false|false|true|||java.lang.String|||||The credentials of the principal for authenticating the caller to the service. For more information, see the Java API documentation for javax.naming.Context.SECURITY_CREDENTIALS.
ConnectionFactoryJndiPropertySecurityPrincipal|1|false|false|false|true|||java.lang.String|||||The identity of the principal for authenticating the caller to the service. For more information, see the Java API documentation for javax.naming.Context.SECURITY_PRINCIPAL.
ConnectionFactoryJndiPropertyUrlPkgPrefixes|1|false|false|false|true|||java.lang.String|||||This is the JMS standard URL_PKG_PREFIXES, a colon-separated list of package prefixes for the class name of the factory class that will create a URL context factory
ConnectionFactoryName|1|false|true|false|true||jms.__module.__flow.__component.connection.factory.name|java.lang.String||||ConnectionFactory|ConnectionFactoryName is required if not already passed on the constructor
ConnectionFactoryUsername|1|false|true|false|true||jms.__module.__flow.__component.connection.factory.user|java.lang.String||||admin|Authentication principal
ConnectionFactoryPassword|1|false|true|false|true||jms.__module.__flow.__component.connection.factory.password|java.lang.String||||admin|Id set on the JMS connection for durable subscribers
ConnectionPassword|1|false|false|false|true|||java.lang.String|||||Authentication credential.This value is masked on all GUI views.
ConnectionUsername|1|false|false|false|true|||java.lang.String|||||Authentication principal
DeliveryMode|1|false|false|false|true|||java.lang.Integer|||||This maps onto javax.jms.DeliveryMode i.e. NON_PERSISTENT = 1, PERSISTENT = 2
DeliveryPersistent|1|false|false|false|true|||java.lang.Boolean|||||Default(false) flag indicating whether publishing messages are persisted on the broker or hold in memory
DestinationJndiName|1|false|true|false|true||jms.__module.__flow.__component.destination|java.lang.String|||||Destination(Topic/Queue) name, which could refer as well to JNDI name
DestinationJndiProperties|1|false|false|false|true|||java.lang.String|||||Optional JNDI parameters map. Typical map would include following keys : java.naming.provider.url, java.naming.factory.initial, java.naming.factory.url.pkgs, java.naming.security.credentials, java.naming.security.principle
DestinationJndiPropertyFactoryInitial|1|false|false|false|true||jms.__module.__flow.__component.destination.jndi.initial|java.lang.String||||org.apache.activemq.jndi.ActiveMQInitialContextFactory|The fully qualified class name of the factory class that will create the initial context. An initial context is the starting point for naming operations. For more information, see the Java API documentation for javax.naming.Context.INITIAL_CONTEXT_FACTORY.
DestinationJndiPropertyProviderUrl|1|false|false|false|true||jms.__module.__flow.__component.destination.jndi.provider.url|java.lang.String||||vm://embedded-broker?create=true&broker.persistent=false&broker.useJmx=false|The configuration information for the service provider to use. The value should contain a URL string. For more information, see the Java API documentation for javax.naming.Context.PROVIDER_URL.
DestinationJndiPropertySecurityCredentials|1|false|false|false|true||jms.__module.__flow.__component.destination.jndi.password|java.lang.String||||admin|The credentials of the principal for authenticating the caller to the service. For more information, see the Java API documentation for javax.naming.Context.SECURITY_CREDENTIALS.
DestinationJndiPropertySecurityPrincipal|1|false|false|false|true||jms.__module.__flow.__component.destination.jndi.user|java.lang.String||||admin|The identity of the principal for authenticating the caller to the service. For more information, see the Java API documentation for javax.naming.Context.SECURITY_PRINCIPAL.
DestinationJndiPropertyUrlPkgPrefixes|1|false|false|false|true|||java.lang.String|||||This is the JMS standard URL_PKG_PREFIXES, a colon-separated list of package prefixes for the class name of the factory class that will create a URL context factory
ExplicitQosEnabled|1|false|false|false|true|||java.lang.Boolean|||||Default (false), set to true if the deliveryMode, priority or timeToLive qualities of service should be used when sending messages.
MessageConverter|1|false|false|true|true|||java.lang.String|org.springframework.jms.support.converter.MessageConverter||||Strategy interface that specifies a converter between Java objects and JMS messages.
MessageIdEnabled|1|false|false|false|true|||java.lang.Boolean|||||See org.springframework.jms.core.JmsTemplate, provides a hint to the message producer to enable message IDs
MessageTimestampEnabled|1|false|false|false|true|||java.lang.Boolean|||||See org.springframework.jms.core.JmsTemplate, provides a hint to the message producer to enable message timestamps
PostProcessor|1|false|false|true|true|||java.lang.String|org.ikasan.component.endpoint.jms.producer.PostProcessor||||Post processing operations on the JMS message before being sent over the wire
Priority|1|false|false|false|true|||java.lang.Integer|||||Optional allows to set message priority on the message. This option will only work if the broker or/and consumer are configured to use the priority when dispatching/consuming messages.
PubSubDomain|1|false|false|false|true|||java.lang.Boolean|||||Set to true to indicate that destination is a topic, otherwise destination is a queue
PubSubNoLocal|1|false|false|false|true|||java.lang.Boolean|||||Default(false) flag indicating whether to inhibit the delivery of messages published by its own connection.
ReceiveTimeout|1|false|false|false|true|||java.lang.Long|||||Sets the receive timout (in milliseconds) for querying and download of content. Defaults to the JMS spring timeout.
SessionAcknowledgeMode|1|false|false|false|true|||java.lang.Integer|||||The JMS acknowledgement mode that is used when creating a JMS Session to send a message, valid values are: SESSION_TRANSACTED = 0, AUTO_ACKNOWLEDGE = 1, CLIENT_ACKNOWLEDGE = 2, DUPS_OK_ACKNOWLEDGE = 3
SessionAcknowledgeModeName|1|false|false|false|true|||java.lang.String|||||"See javax.jms.Session, set the JMS acknowledgement mode by the name of the corresponding constant in the JMS Session interface, e.g. ""AUTO_ACKNOWLEDGE"", ""CLIENT_ACKNOWLEDGE"", ""DUPS_OK_ACKNOWLEDGE"", ""SESSION_TRANSACTED"""
SessionTransacted|1|false|false|false|true|||java.lang.Boolean||||true|Sets whether the session should be part of a transaction.
TimeToLive|1|false|false|false|true|||java.lang.Long|||||"Optional the time-to-live of the message when sending, this is only used when ""isExplicitQosEnabled"" equals ""true""."
TransactionManager|1|false|false|true|true|||java.lang.String|org.springframework.transaction.jta.JtaTransactionManager||||Provide the classname that overrides and implements the default JtaTransactionManager interface. Typically this is the Spring transaction manager, overriding may be needed to interface into third party containers.
