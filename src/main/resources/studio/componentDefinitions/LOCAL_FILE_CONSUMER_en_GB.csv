# propertyName|isConfigMandatory|isUserImplementedClass|propertyConfigFileLabel|propertyDataType|usageDataType|validation|defaultValue - dataType must be string or an object that support Object.value(String)|helpText
#
# Note: 1. First row must be th column  headings so that edit as table works in intellij
#       2. Every component is assumed to have name and description so they do not need to be included here
#
# isConfigMandatory - Mandatory for the component to be deemed to be complete
# isUserImplementedClass - The user will define a beskpoke class that implements the interface, we will generate the spring property but leave implementation to client code.
# propertyName - Name of the property, used on input screens and to generate variable names
# propertyConfigFileLabel - Identifies the spring injected property name. If a property does not have a propertyConfigFileLabel it is assumed that the property will not be environment specific i.e. not spring injected
# propertyDataType - i.e. the data type used in the properties file, note that this is not always the same as the usage data type/valuedate e.g. a List will have a
# usageDataType - Defaults to the propertyDataType. This is the data type from the Ikasan perspective e.g. List will have a propertyDataType of String but usageDatatype of List<T>, cron expression may have the regexp pattern they need to conform to
# validation - Used by the property editor to validate the property
# defaultValue - As displayed in the properies editor.
# helpTest - As shown in the toolTip on the properties editor and error text.
#
# LOCAL_FILE_CONSUMER -
#
CronExpression|true|false|file.consumer.cron-expression|java.lang.String|||0/5 * * * * ? *|Cron based expression dictating the invocation schedule for this component. Example, "*/5 * * * * ?" will fire every 5 seconds.
Filenames|true|false|file.consumer.filenames|java.lang.String|java.util.List<String>||{'myFile','anotherFile'}|The list of filenames to consume, the files are assumed to be in the same directory as the running ikasan application or one of its subdirectories.
#Configuration|false|true|file.consumer.configuration|org.ikasan.component.endpoint.filesystem.messageprovider.FileConsumerConfiguration||||Please provide the classname for your implementation of FileConsumerConfiguration. Encapsulates all the properties for the FileConsumerConfiguration configuration into a single bean.
#ConfiguredResourceId|false|true||""||||This is required when adding developer specified bespoke configurations to a component. Once chosen, the component must be treated as a bespoke one i.e. not routinely autogenerated.
CriticalOnStartup|false|false||java.lang.Boolean||||Identify this component as being critical for starting the flow i.e. if the component fails to start, the whole flow will not start.
DirectoryDepth|false|false||java.lang.Integer||||How deep down the directory tree to go to find matching filenames.
Eager|false|false||java.lang.Boolean||||When true the scheduled consumer is immediately called back on completion of flow execution i.e. attempts to consume all messages available. If false the scheduled consumers cron expression determines the callback.
Encoding|false|false||java.lang.String||"UTF-8"||Encoding of the files ie. UTF-8
#EventFactory|false|false||org.ikasan.spec.event.EventFactory|||||Override the default event factory. The Event factory used to instantiate ikasan flow events based on incoming payload from the tech endpoint
IgnoreFileRenameWhilstScanning|false|false||java.lang.Boolean||||Ignore cases where the file has been renamed between scanning and retrieval.
IgnoreMisfire|false|false||java.lang.Boolean||||Default(True). Whether to ignore call back failures.
IncludeHeader|false|false||java.lang.Boolean||||Assume first line of the file is a header and include it as a header within the message payload.
IncludeTrailer|false|false||java.lang.Boolean||||Assume last line of the file is a trailer and include it as a trailer within the message payload.
LogMatchedFilenames|false|false||java.lang.Boolean||||Write any matching filenames found to the log files as additional information.
#ManagedEventIdentifierService|false|false|||org.ikasan.spec.event.ManagedEventIdentifierService||Override this is you want control over the flow event created by this consumer
#ManagedResourceRecoveryManager|false|false||||org.ikasan.spec.management.ManagedResourceRecoveryManager||Used to give the component a handle directly to the recovery manager or allow override of the managed resource recovery manager
MaxEagerCallbacks|false|false||java.lang.Integer||||The maximum number of consecutive eager scheduled callbacks (when eager is set to true) before reverting to business schedule. Default is unlimited until no more data available.
#MessageProvider|false|false||org.ikasan.component.endpoint.quartz.consumer.MessageProvider||||The message provider is responsible for providing the message payload
MessageProviderPostProcessor|false|true||java.lang.String|org.ikasan.component.endpoint.filesystem.messageprovider.MessageProviderPostProcessor|||Provide the name of the class implementing the MessageProviderPostProcessor interface. This class provide additional functionality to be applied to the payload as a post processor before returning for next component invocation.
ScheduledJobGroupName|false|false||java.lang.String||||Group for scheduled jobs within the internal Ikasan scheduler
ScheduledJobName|false|false||java.lang.String||||Name to identify this job within the internal Ikasan scheduler
SortAscending|false|false||java.lang.Boolean||||Sort the list in ascending order (true) or descending order (false) when a sort method is used.
SortByModifiedDateTime|false|false||java.lang.Boolean||||Sort the received file list by last modified date time.
Timezone|false|false||java.lang.String||||Support for overriding the default timezone