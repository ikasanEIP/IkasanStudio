/**
* The component factory defines the details of the components and their configuration.
*
* This file is auto-generated by Ikasan Studio, do no edit.
*/
@org.springframework.context.annotation.Configuration
public class ComponentFactory
{
@org.springframework.beans.factory.annotation.Value(#[["${module.name}"]]#)
private String moduleName;

@javax.annotation.Resource
org.ikasan.builder.BuilderFactory builderFactory;

## properties for all components
#foreach( $ikasanComponent in $flow.flowComponentList )
    #if (! $ikasanComponent.type.bespokeClass )
        #foreach( $propertyMapEntry in $ikasanComponent.StandardProperties.entrySet() )
            #if( ${propertyMapEntry.value.meta.propertyConfigFileLabel} != "" && $!{propertyMapEntry.value.value} )
                @org.springframework.beans.factory.annotation.Value("${${flow.javaPackageName}.##
            ## Supports scenario where flowname prefix alone is not unique
            #if ( $!{ikasanComponent.name} != "" )${ikasanComponent.javaPackageName}.#end
            ${propertyMapEntry.value.meta.propertyConfigFileLabel}}")
            ##
            ${propertyMapEntry.value.meta.dataType.CanonicalName}  ${propertyMapEntry.value.meta.PropertyConfigFileLabelAsVariable};
            #end
        #end
    #end
#end

##
#foreach( $ikasanComponent in $flow.flowComponentList )
public $ikasanComponent.type.elementCategory.baseClass get${ikasanComponent.type.associatedMethodName}() {
return ##
#if ( $ikasanComponent.type.bespokeClass )
##
new ${ikasanComponent.properties.ApplicationPackageName.value}.${flow.JavaPackageName}.${ikasanComponent.properties.BespokeClassName.value}();
##
#else
builderFactory.getComponentBuilder().${ikasanComponent.type.associatedMethodName}()
#foreach( $propertyMapEntry in $ikasanComponent.StandardProperties.entrySet() )
#if( $!{propertyMapEntry.value.value} )
.set${propertyMapEntry.key}##
#if ( $!{propertyMapEntry.value.meta.propertyConfigFileLabel} != "" )
(${propertyMapEntry.value.meta.PropertyConfigFileLabelAsVariable})
#else
(${propertyMapEntry.value.value})
#end
#end
#end
.build();
#end
}
#end
}