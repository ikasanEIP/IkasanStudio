{
  "name": "Custom Converter",
  "helpText": "The main responsibility of a converter is to convert from one form to another. The purpose of this converter is to support any type of transformation required, implemented by a bespoke converter class.",
  "webHelpURL": "https://github.com/ikasanEIP/ikasan/blob/3.1.x/ikasaneip/component/converter/Readme.md",
  "implementingClass": "org.ikasan.spec.component.transformation.Converter.Custom",
  "_ikasanComponentFactoryMethod": "The custom converter is a user implemented class so has no factory as such",
  "flowBuilderMethod": "converter",
  "generatesUserImplementedClass": "true",
  "properties": {
    "componentName": {
      "propertyName": "componentName",
      "mandatory": true,
      "helpText": "The name of the component as displayed on diagrams, space are encouraged, succinct is best. The name should be unique for the flow."
    },
    "userImplementedClassName": {
      "propertyName": "userImplementedClassName",
      "userImplementClassFtlTemplate": "converterTemplate.ftl",
      "affectsUserImplementedClass": "true",
      "helpText": "The name of the class that contain the custom conversion, the IDE will create a template for this class, the user  must provide the implementation.",
      "mandatory": true,
      "validation": "^[A-Z_$][a-zA-Z\\d_$£]*$",
      "validationMessage": "Provide a valid java classname for the converter e.g. starting with upper case, followed by number/characters etc."
    },
    "fromType": {
      "propertyName": "fromType",
      "affectsUserImplementedClass": "true",
      "defaultValue": "java.lang.String",
      "helpText": "The type of data we expect to come into the converter. This can be any Java class.",
      "mandatory": true,
      "validation": "^([a-zA-Z_$][a-zA-Z\\d_$]*\\.)*[A-Z_$][a-zA-Z\\d_$£]*$",
      "validationMessage": "Provide a fully qualified Java class name to be used as the type for the input to the converter."
    },
    "toType": {
      "propertyName": "toType",
      "affectsUserImplementedClass": "true",
      "defaultValue": "java.lang.String",
      "helpText": "The type of data we expect to be the output of the the converter. This can be any Java class.",
      "mandatory": true,
      "validation": "^([a-zA-Z_$][a-zA-Z\\d_$]*\\.)*[A-Z_$][a-zA-Z\\d_$£]*$",
      "validationMessage": "Provide a fully qualified Java class name to be used as the type for the input to the converter."
    }
  }
}

