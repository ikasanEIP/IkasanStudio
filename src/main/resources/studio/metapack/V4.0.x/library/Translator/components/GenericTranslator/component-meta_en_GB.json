{
  "name": "Generic Translator",
  "flowBuilderMethod": "translator",
  "generatesUserImplementedClass": "true",
  "helpText": "<strong>Generic Translator</strong><p>The main responsibility of a translator is to convert the contents of the payload, not the type. This means it is expected that the payload it a mutable class. The purpose of this translator is to support any type of transformation required, implemented by a bespoke translator class.</p><p>The 'Generic' variants merely work off the interface and expect the user to supply the concrete class that implements the interface e.g. where the Ikasan components have been subclassed or extended into reusable frameworks.</p>",
  "implementingClass": "",
  "builderFactory": "org.ikasan.builder.BuilderFactory",
  "additionalKey": "Generic",
  "usesBuilderInFactory": true,
  "allowableProperties": {
    "configuration": {
      "propertyName": "configuration",
      "helpText": "Provide the classname that overrides and implements the default FileConsumerConfiguration interface. The class encapsulates all the properties here into a single bean, using it will reduce your ability to configure the component within this tool",
      "setterProperty": true,
      "userSuppliedClass": true,
      "usageDataType": "org.ikasan.component.endpoint.filesystem.messageprovider.FileConsumerConfiguration",
      "validation": "^[A-Z_$][a-zA-Z\\d_$£]*$",
      "validationMessage": "Provide a java classname for the Configuration bean."
    },
    "configurationId": {
      "propertyName": "configurationId",
      "defaultValue": "__module-__flow-__component",
      "helpText": "By default, the configuration ID = modulename + flowname + componentName + componentType. There are times when you may wish to override this i.e. if you want multiple flows to share the same configration or you have changed a flow name but don't want to update properties that may have already been stored in the override properties database.",
      "setterProperty": true,
      "setterMethod": "setConfiguredResourceId",
      "usageDataType": "java.lang.String"
    },
    "invokerConfigurationId": {
      "propertyName": "invokerConfigurationId",
      "helpText": "By default, the configuration ID = modulename + flowname + componentName + componentType + some RandomData. There are times when you may wish to override this i.e. if you want multiple flows to share the same configration or you have changed a flow name but don't want to update properties that may have already been stored in the override properties database.",
      "usageDataType": "java.lang.String"
    },
    "requiresStub": {
      "propertyName": "requiresStub",
      "helpText": "Does this component require a stub to be generated by Studio, if not, it is assumed the user will provide the instance from its own factory class."
    },
    "userImplementedClassName": {
      "propertyName": "userImplementedClassName",
      "defaultValue": "__fieldName:componentName",
      "userImplementClassFtlTemplate": "brokerTemplate.ftl",
      "affectsUserImplementedClass": "true",
      "helpText": "The name of the class that that implements the interface for this generic component.",
      "mandatory": true,
      "validation": "^[A-Z_$][a-zA-Z\\d_$£]*$",
      "validationMessage": "Provide a valid java classname for the broker e.g. starting with upper case, followed by number/characters etc."
    }
  }
}

