package com.ikasan.sample.spring.boot;

import org.ikasan.builder.BuilderFactory;
import org.ikasan.builder.ModuleBuilder;
import org.ikasan.builder.component.ComponentBuilder;
import org.ikasan.spec.flow.Flow;
import org.ikasan.spec.module.Module;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.ImportResource;

import javax.annotation.Resource;

/**
 * This is the Spring book start class.
 * This file is auto-generated by Ikasan Studio, do no edit.
 */
@Configuration("ModuleFactory")
@ImportResource({
        "classpath:h2-datasource-conf.xml",
        "classpath:ikasan-transaction-pointcut-ikasanMessageListener.xml"
})
public class ModuleConfig {
    @Resource
    BuilderFactory builderFactory;

    @Bean
    public org.ikasan.spec.module.Module myModule() {
        ModuleBuilder moduleBuilder = builderFactory.getModuleBuilder("My Integration Module")
                .withDescription("My first integration module.");

        ComponentBuilder componentBuilder = builderFactory.getComponentBuilder();

        Module module = moduleBuilder
                .addFlow(get_NewFlow1(moduleBuilder, componentBuilder))
                .build();
        return module;
    }

    private Flow get_NewFlow1(ModuleBuilder moduleBuilder, ComponentBuilder componentBuilder) {
        FlowBuilder NewFlow1FlowBuilder = moduleBuilder.getFlowBuilder("Event Generating Flow");
        Flow NewFlow1 = NewFlow1FlowBuilder
                .consumer("My Source Consumer", componentBuilder.eventGeneratingConsumer())
                .producer("My Target Producer", componentBuilder.logProducer())
                .build();
        return NewFlow1;
    }
}