package org.ikasan;

/**
* The component factory defines the details of the components and their configuration.
*
* This file is auto-generated by Ikasan Studio, do no edit.
*/
@org.springframework.context.annotation.Configuration
public class ComponentFactoryMyFlow1
{
@org.springframework.beans.factory.annotation.Value("${module.name}")
private String moduleName;

@javax.annotation.Resource
org.ikasan.builder.BuilderFactory builderFactory;

@org.springframework.beans.factory.annotation.Value("#{${myflow1.file.consumer.filenames}}")
java.util.List<String> myFlow1FileConsumerFilenames;
@org.springframework.beans.factory.annotation.Value("${myflow1.file.consumer.cron-expression}")
java.lang.String myFlow1FileConsumerCronexpression;
@javax.annotation.Resource
org.ikasan.component.endpoint.quartz.consumer.MessageProvider myMessageProviderClass;
@javax.annotation.Resource
org.ikasan.component.endpoint.filesystem.messageprovider.FileConsumerConfiguration myConfigurationClass;
@javax.annotation.Resource
org.ikasan.spec.event.EventFactory myEventFactoryClassName;
@javax.annotation.Resource
org.ikasan.spec.management.ManagedResourceRecoveryManager myManagedResourceRecoveryManagerClass;
@javax.annotation.Resource
org.ikasan.component.endpoint.filesystem.messageprovider.MessageProviderPostProcessor myMessageProviderPostProcessor;

public org.ikasan.spec.component.endpoint.Consumer getTestLocalFileConsumer() {
return builderFactory.getComponentBuilder().fileConsumer()
.setCriticalOnStartup(true)
.setTimezone("GMT")
.setDirectoryDepth(1)
.setEager(true)
.setMessageProvider(myMessageProviderClass)
.setConfiguration(myConfigurationClass)
.setFilenames(myFlow1FileConsumerFilenames)
.setSortByModifiedDateTime(12)
.setEventFactory(myEventFactoryClassName)
.setEncoding("UTF-8")
.setIgnoreMisfire(true)
.setManagedResourceRecoveryManager(myManagedResourceRecoveryManagerClass)
.setIgnoreFileRenameWhilstScanning(true)
.setConfiguredResourceId("myUniqueConfiguredResourceIdName")
.setScheduledJobName("myScheduledJobName")
.setMessageProviderPostProcessor(myMessageProviderPostProcessor)
.setScheduledJobGroupName("myScheduledJobGroupName")
.setCronExpression(myFlow1FileConsumerCronexpression)
.setSortAscending(true)
.setMaxEagerCallbacks(1)
.build();
}}