package org.ikasan;

/**
* The component factory defines the details of the components and their configuration.
*
* This file is auto-generated by Ikasan Studio, do no edit.
*/
@org.springframework.context.annotation.Configuration
public class ComponentFactoryMyFlow1
{
@org.springframework.beans.factory.annotation.Value("${module.name}")
private String moduleName;

@javax.annotation.Resource
org.ikasan.builder.BuilderFactory builderFactory;

@org.springframework.beans.factory.annotation.Value("${jms.atobconvert.myflow1.mybasicamqjspringjmsconsumer.connection.factory.jndi.initial}")
java.lang.String jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerConnectionFactoryJndiInitial;
@org.springframework.beans.factory.annotation.Value("${jms.atobconvert.myflow1.mybasicamqjspringjmsconsumer.connection.factory.jndi.provider.url}")
java.lang.String jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerConnectionFactoryJndiProviderUrl;
@org.springframework.beans.factory.annotation.Value("${jms.atobconvert.myflow1.mybasicamqjspringjmsconsumer.connection.factory.name}")
java.lang.String jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerConnectionFactoryName;
@org.springframework.beans.factory.annotation.Value("${jms.atobconvert.myflow1.mybasicamqjspringjmsconsumer.connection.factory.password}")
java.lang.String jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerConnectionFactoryPassword;
@org.springframework.beans.factory.annotation.Value("${jms.atobconvert.myflow1.mybasicamqjspringjmsconsumer.connection.factory.user}")
java.lang.String jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerConnectionFactoryUser;
@org.springframework.beans.factory.annotation.Value("${jms.atobconvert.myflow1.mybasicamqjspringjmsconsumer.destination}")
java.lang.String jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerDestination;
@org.springframework.beans.factory.annotation.Value("${jms.atobconvert.myflow1.mybasicamqjspringjmsconsumer.destination.jndi.initial}")
java.lang.String jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerDestinationJndiInitial;
@org.springframework.beans.factory.annotation.Value("${jms.atobconvert.myflow1.mybasicamqjspringjmsconsumer.destination.jndi.provider.url}")
java.lang.String jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerDestinationJndiProviderUrl;
@org.springframework.beans.factory.annotation.Value("${jms.atobconvert.myflow1.mybasicamqjspringjmsconsumer.destination.jndi.password}")
java.lang.String jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerDestinationJndiPassword;
@org.springframework.beans.factory.annotation.Value("${jms.atobconvert.myflow1.mybasicamqjspringjmsconsumer.destination.jndi.user}")
java.lang.String jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerDestinationJndiUser;


public org.ikasan.spec.component.endpoint.Consumer getMyBasicAMQJSpringJMSConsumer() {
return builderFactory.getComponentBuilder().jmsConsumer()
.setConfiguredResourceId("aToBConvertmyFlow1myBasicAMQJSpringJMSConsumer")
.setConnectionFactoryJndiPropertyFactoryInitial(jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerConnectionFactoryJndiInitial)
.setConnectionFactoryJndiPropertyProviderUrl(jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerConnectionFactoryJndiProviderUrl)
.setConnectionFactoryName(jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerConnectionFactoryName)
.setConnectionFactoryName("ConnectionFactory")
.setConnectionFactoryPassword(jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerConnectionFactoryPassword)
.setConnectionFactoryUsername(jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerConnectionFactoryUser)
.setDestinationJndiName(jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerDestination)
.setDestinationJndiPropertyFactoryInitial(jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerDestinationJndiInitial)
.setDestinationJndiPropertyProviderUrl(jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerDestinationJndiProviderUrl)
.setDestinationJndiPropertySecurityCredentials(jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerDestinationJndiPassword)
.setDestinationJndiPropertySecurityPrincipal(jmsAToBConvertMyFlow1MyBasicAMQJSpringJMSConsumerDestinationJndiUser)
.setPubSubDomain(myPubSubDomain)
.setSessionTransacted(true)
.build();
}}
