package org.ikasan;

/**
* The component factory defines the details of the components and their configuration.
*
* This file is auto-generated by Ikasan Studio, do no edit.
*/
@org.springframework.context.annotation.Configuration
public class ComponentFactoryMyFlow1
{
@org.springframework.beans.factory.annotation.Value("${module.name}")
private String moduleName;

@javax.annotation.Resource
org.ikasan.builder.BuilderFactory builderFactory;


@javax.annotation.Resource
org.ikasan.endpoint.ftp.producer.FtpProducerConfiguration myConfigurationClass;
@javax.annotation.Resource
java.util.Map<String, String> key1value1key2value2;

public org.ikasan.spec.component.endpoint.Producer getTestEmailProducer() {
return builderFactory.getComponentBuilder().emailProducer()
.setEmailFormat("html")
.setFrom("FromAddress")
.setMailSmtpClass("myMailSmtpClass")
.setConfiguration(myConfigurationClass)
.setMailRuntimeEnvironment("myMailRuntimeEnvironment")
.setMailPopClass("myMailPopClass")
.setMailhost("myMailhostAddress")
.setMailPopUser("myMailPopUser")
.setMailStoreProtocol("myMailStoreProtocol")
.setMailDebug(true)
.setCriticalOnStartup(true)
.setCcRecipients({'cc1','cc2'})
.setUser("myUser")
.setExtendedMailSessionProperties(key1value1key2value2)
.setTransportProtocol("myTransportProtocol")
.setMailSmtpUser("myMailSmtpUser")
.setEmailBody("myEmailBody")
.setMailSmtpHost("myMailSmtpHost")
.setToRecipient("myToRecipient")
.setMailSubject("myMailSubject")
.setMailMimeAddressStrict(true)
.setToRecipients({'to1','to2'})
.setHasAttachments(true)
.setMailPopPort(100)
.setCcRecipient("myCcRecipient")
.setMailSmtpPort(101)
.setBccRecipient("myBccRecipient")
.setBccRecipients({'bcc1','bcc2'})
.setMailPassword("myMailPassword")
.setConfiguredResourceId("myUniqueConfiguredResourceIdName")
.build();
}}