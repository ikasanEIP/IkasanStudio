package org.ikasan;

/**
* The component factory defines the details of the components and their configuration.
*
* This file is auto-generated by Ikasan Studio, do no edit.
*/
@org.springframework.context.annotation.Configuration
public class ComponentFactoryMyFlow1
{
@org.springframework.beans.factory.annotation.Value("${module.name}")
private String moduleName;

@javax.annotation.Resource
org.ikasan.builder.BuilderFactory builderFactory;

@org.springframework.beans.factory.annotation.Value("${myflow1.sftp.producer.clientID}")
java.lang.String myFlow1SftpProducerClientID;
@org.springframework.beans.factory.annotation.Value("${myflow1.sftp.consumer.known-hosts-filename}")
java.lang.String myFlow1SftpConsumerKnownHostsFilename;
@org.springframework.beans.factory.annotation.Value("${myflow1.sftp.consumer.max-retry-attempts}")
java.lang.Integer myFlow1SftpConsumerMaxRetryAttempts;
@org.springframework.beans.factory.annotation.Value("${myflow1.sftp.producer.outputDirectory}")
java.lang.String myFlow1SftpProducerOutputDirectory;
@org.springframework.beans.factory.annotation.Value("${myflow1.sftp.consumer.password}")
java.lang.String myFlow1SftpConsumerPassword;
@org.springframework.beans.factory.annotation.Value("${myflow1.sftp.consumer.preferred-key-exchange-algorithm}")
java.lang.String myFlow1SftpConsumerPreferredKeyExchangeAlgorithm;
@org.springframework.beans.factory.annotation.Value("${myflow1.sftp.consumer.private-key-filename}")
java.lang.String myFlow1SftpConsumerPrivateKeyFilename;
@org.springframework.beans.factory.annotation.Value("${myflow1.sftp.consumer.remote-host}")
java.lang.String myFlow1SftpConsumerRemoteHost;
@org.springframework.beans.factory.annotation.Value("${myflow1.sftp.consumer.remote-port}")
java.lang.String myFlow1SftpConsumerRemotePort;
@org.springframework.beans.factory.annotation.Value("${myflow1.sftp.consumer.username}")
java.lang.String myFlow1SftpConsumerUsername;
@javax.annotation.Resource
org.ikasan.component.endpoint.filesystem.messageprovider.FileConsumerConfiguration myConfigurationClass;
@javax.annotation.Resource
org.ikasan.spec.management.ManagedResourceRecoveryManager myManagedResourceRecoveryManagerClass;

public org.ikasan.spec.component.endpoint.Producer getMySFTPProducer() {
return builderFactory.getComponentBuilder().sFTPProducer()
.setChecksumDelivered(true)
.setCleanupChunks(true)
.setCleanupJournalOnComplete(true)
.setClientID(myFlow1SftpProducerClientID)
.setConfiguration(myConfigurationClass)
.setConfiguredResourceId("myUniqueConfiguredResourceIdName")
.setCreateParentDirectory(true)
.setCriticalOnStartup(true)
.setKnownHostFilename(myFlow1SftpConsumerKnownHostsFilename)
.setManagedResourceRecoveryManager(myManagedResourceRecoveryManagerClass)
.setMaxRetryAttempts(myFlow1SftpConsumerMaxRetryAttempts)
.setOutputDirectory(myFlow1SftpProducerOutputDirectory)
.setPassword(myFlow1SftpConsumerPassword)
.setPreferredKeyExchangeAlgorithm(myFlow1SftpConsumerPreferredKeyExchangeAlgorithm)
.setPrivateKeyFilename(myFlow1SftpConsumerPrivateKeyFilename)
.setRemoteHost(myFlow1SftpConsumerRemoteHost)
.setRemotePort(myFlow1SftpConsumerRemotePort)
.setRenameExtension(tmp)
.setTempFileName("myTempFiilename")
.setUnzip(true)
.setUsername(myFlow1SftpConsumerUsername)
.build();
}}