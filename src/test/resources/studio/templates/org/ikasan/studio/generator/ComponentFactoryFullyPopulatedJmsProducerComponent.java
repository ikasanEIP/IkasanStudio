package org.ikasan;

/**
* The component factory defines the details of the components and their configuration.
*
* This file is auto-generated by Ikasan Studio, do no edit.
*/
@org.springframework.context.annotation.Configuration
public class ComponentFactoryMyFlow1
{
@org.springframework.beans.factory.annotation.Value("${module.name}")
private String moduleName;

@javax.annotation.Resource
org.ikasan.builder.BuilderFactory builderFactory;

@org.springframework.beans.factory.annotation.Value("${myflow1.testjmsconsumer.pamq.__module.connectionFactory.name}")
java.lang.String pamq__moduleConnectionFactoryName;
@org.springframework.beans.factory.annotation.Value("${myflow1.testjmsconsumer.pjms.destination.__module.__flow.__componentName}")
java.lang.String pjmsDestination__module__flow__componentName;
@org.springframework.beans.factory.annotation.Value("${myflow1.testjmsconsumer.pamq.__module.java.naming.factory.initial}")
java.lang.String pamq__moduleJavaNamingFactoryInitial;
@org.springframework.beans.factory.annotation.Value("${myflow1.testjmsconsumer.pamq.__module.connectionFactory.password}")
java.lang.String pamq__moduleConnectionFactoryPassword;
@org.springframework.beans.factory.annotation.Value("${myflow1.testjmsconsumer.pamq.__module.java.naming.connection.factory.initial}")
java.lang.String pamq__moduleJavaNamingConnectionFactoryInitial;
@org.springframework.beans.factory.annotation.Value("${myflow1.testjmsconsumer.pamq.__module.provider.url}")
java.lang.String pamq__moduleProviderUrl;
@org.springframework.beans.factory.annotation.Value("${myflow1.testjmsconsumer.pamq.__module.connection.provider.url}")
java.lang.String pamq__moduleConnectionProviderUrl;
@org.springframework.beans.factory.annotation.Value("${myflow1.testjmsconsumer.pamq.__module.connectionFactory.user}")
java.lang.String pamq__moduleConnectionFactoryUser;
@javax.annotation.Resource
org.ikasan.component.endpoint.filesystem.messageprovider.FileConsumerConfiguration myConfigurationClass;
@javax.annotation.Resource
javax.jms.ConnectionFactory myConnectionFactory;
@javax.annotation.Resource
org.ikasan.component.endpoint.jms.producer.PostProcessor myPostProcessor;
@javax.annotation.Resource
org.springframework.jms.support.converter.MessageConverter myMessageConverter;
@javax.annotation.Resource
org.springframework.transaction.jta.JtaTransactionManager myTransactionManagerClass;

public org.ikasan.spec.component.endpoint.Producer getTestJmsConsumer() {
return builderFactory.getComponentBuilder().jmsProducer()
.setDeliveryPersistent(true)
.setConnectionFactoryName(pamq__moduleConnectionFactoryName)
.setMessageIdEnabled(true)
.setConfiguration(myConfigurationClass)
.setDestinationJndiProperties("myDestinationJndiProperties")
.setDestinationJndiName(pjmsDestination__module__flow__componentName)
.setReceiveTimeout(1000)
.setDestinationJndiPropertyFactoryInitial(pamq__moduleJavaNamingFactoryInitial)
.setSessionAcknowledgeMode(AUTO_ACKNOWLEDGE)
.setConnectionFactory(myConnectionFactory)
.setConnectionFactoryPassword(pamq__moduleConnectionFactoryPassword)
.setConnectionFactoryJndiPropertyFactoryInitial(pamq__moduleJavaNamingConnectionFactoryInitial)
.setDestinationJndiPropertyProviderUrl(pamq__moduleProviderUrl)
.setMessageTimestampEnabled(true)
.setPostProcessor(myPostProcessor)
.setConnectionPassword("myConnectionPassword")
.setConnectionFactoryJndiPropertySecurityPrincipal("myConnectionFactoryJndiPropertySecurityPrincipal")
.setTimeToLive(100)
.setPriority(1)
.setDestinationJndiPropertyUrlPkgPrefixes("org.myapp")
.setConnectionFactoryJndiPropertySecurityCredentials("myConnectionFactoryJndiPropertySecurityCredentials")
.setMessageConverter(myMessageConverter)
.setPubSubNoLocal(true)
.setExplicitQosEnabled(true)
.setConnectionFactoryJndiPropertyProviderUrl(pamq__moduleConnectionProviderUrl)
.setConnectionFactoryJndiPropertyUrlPkgPrefixes("myConnectionFactoryJndiPropertyUrlPkgPrefixes")
.setSessionTransacted(true)
.setConnectionFactoryJNDIProperties({key1:'value1',key2:'value2'})
.setConnectionUsername("myConnectionUsername")
.setConnectionFactoryUsername(pamq__moduleConnectionFactoryUser)
.setConfiguredResourceId("myUniqueConfiguredResourceIdName")
.setTransactionManager(myTransactionManagerClass)
.setDeliveryMode(1)
.setPubSubDomain(myPubSubDomain)
.build();
}}